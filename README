-------------------------------------------------------------------------------------
-------------- This is PARCOACH (PARallel COntrol flow Anomaly CHecker) -------------
-------------------------------------------------------------------------------------

PARCOACH automatically checks MPI applications to verify the correct use of MPI collective calls.

----------------------------- Project structure ------------------------------

This project contains the following directories: 
   - src
      - Parcoach (Parcoach intra-procedural analysis)
      - aSSA (aSSA applied to Parcoach)
      - SVG (code svg)
      - lib (Parcoach dynamic library)
   - docs
      - article template
   - tests
      - ASSA
      - MPI
      - OMP
      - UPC
      - EXAMPLES



TODO: 
   - Check MPI+OpenMP codes
   - Check OpenMP collectives
   - Check general properties (e.g., non initialized variables) 



----------------------------- Prerequisites ------------------------------

---- Cmake

PARCOACH uses CMake. CMake can be downloaded from http://www.cmake.org

---- LLVM 3.9.1

This version of PARCOACH is an LLVM pass. It works with LLVM 3.9.1
To get LLVM 3.9.1, follow these steps:

-> compiling LLvm requires that you have installed GNU CMAKE, 
GCC (>=4.7.0), python (>=2.7), libtool (version 1.5.22) and zlib (>=1.2.3.4)

svn co http://llvm.org/svn/llvm-project/llvm/tags/RELEASE_391/final llvm

cd llvm/tools
svn co http://llvm.org/svn/llvm-project/cfe/tags/RELEASE_391/final clang

cd clang/tools/
svn co http://llvm.org/svn/llvm-project/clang-tools-extra/tags/RELEASE_391/final extra

cd ../../../projects/
svn co http://llvm.org/svn/llvm-project/openmp/tags/RELEASE_391/final openmp
svn co http://llvm.org/svn/llvm-project/compiler-rt/tags/RELEASE_391/final compiler-rt
svn co http://llvm.org/svn/llvm-project/libcxx/tags/RELEASE_391/final libcxx
svn co http://llvm.org/svn/llvm-project/libcxxabi/tags/RELEASE_391/final libcxxabi

cd ../..
mkdir build
cd build
cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=PATH_TO_LLVM/build -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ ../llvm
make -j4
make install


---- Berkeley UPC

The installation is done in two steps:
(1) Download and install a UPC-to-C translator or UPC compiler
(2) Download and build the UPC runtime


See http://upc.lbl.gov/download/
!! Build BUPC with llvm 3.7.1 !!


---- MPI

No particular version of MPI is required. Use a version handling nonblocking collective if you want to check them.

---- OpenMP

TODO



------------- How to build and use Parcoach ------------

- Build Parcoach library:

mkdir build
cd build
cmake .. && make


- Use Parcoach:

Codes with errors can be found in the tests directory. 
For runtime checking, PARCOACH needs to be linked to its dynamic library.

Example of the use of Parcoach with test.c:

/* CREATE dynamic library DynamicCheck.o  */
clang -g  -c $PATH_TO_DYN_LIBRARY/{MPI/UPC/OMP}_DynamicCheck.c
/* CREATE test bitcode  */
clang -g -emit-llvm -c -o test.bc test.c
/* PARCOACH PASS */
opt -load $PATH_TO_PARCOACH_LIB/LLVMParcoach.dylib -postdomtree -parcoach -debug < test.bc > ./test_optimized.bc
/* CREATE test_optimized.o  */
clang -c test_optimized.bc
/* LINK */
clang test_optimized.o {MPI/UPC/OMP}_DynamicCheck.o -o test $(LDFLAGS)
