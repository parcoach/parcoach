# For now only MPI tests are supported through CMake
find_package(MPI REQUIRED)
message(STATUS "Using mpicc: ${MPI_C_COMPILER}")

find_program(VALGRIND_BIN NAMES valgrind)
if(VALGRIND_BIN STREQUAL "VALGRIND_BIN-NOTFOUND")
  set(PARCOACH_ENABLE_VALGRIND OFF)
else()
  set(PARCOACH_ENABLE_VALGRIND ON)
  message(STATUS "Using valgrind: ${VALGRIND_BIN}")
endif()

message(STATUS "Configuring MPI tests")
configure_file(test_mpi.in test_mpi @ONLY)
set(TEST_MPI_COMMAND ${CMAKE_CURRENT_BINARY_DIR}/test_mpi)
configure_file(test_instr_mpi.in test_instr_mpi @ONLY)
set(TEST_INSTR_MPI_COMMAND ${CMAKE_CURRENT_BINARY_DIR}/test_instr_mpi)

set(LIT_MPI_INCLUDES ${MPI_C_INCLUDE_DIRS})
list(TRANSFORM LIT_MPI_INCLUDES PREPEND "-I")
string(JOIN " " LIT_MPI_INCLUDES ${LIT_MPI_INCLUDES})

parcoach_canonicalize_cmake_booleans(
  PARCOACH_ENABLE_VALGRIND
  )
configure_file(lit.cfg.in ${CMAKE_CURRENT_BINARY_DIR}/lit.cfg @ONLY)

macro(create_mpi_instrumented_executable TARGET_NAME INPUT_BC TARGET_LANG)
  set(INSTR_BC ${INPUT_BC}.instr.bc)
  add_custom_command(
    OUTPUT ${INSTR_BC}
    # TODO: not providing -check-mpi should work!
    COMMAND ${PARCOACH_BIN} ${INPUT_BC} -o ${INSTR_BC} -instrum-inter -check-mpi
    DEPENDS ${INPUT_BC} ${PARCOACH_BIN}
    )
  # Mark the generated bytecode as an external object so that cmake doesn't
  # try to compile it and just forward it to the link step.
  set_property(SOURCE ${INSTR_BC} PROPERTY EXTERNAL_OBJECT TRUE)
  add_executable(${EXE_TARGET} ${INSTR_BC})
  target_include_directories(${EXE_TARGET} PRIVATE MPI::MPI_${TARGET_LANG})
  target_link_libraries(${EXE_TARGET} MPI::MPI_${TARGET_LANG})
  target_link_libraries(${EXE_TARGET} ${PARCOACH_MPI_INSTR_LIB})
  set_target_properties(${EXE_TARGET} PROPERTIES LINKER_LANGUAGE ${TARGET_LANG})
  add_dependencies(tests-dependencies ${EXE_TARGET})
endmacro()

add_subdirectory(basic)

option(PARCOACH_ENABLE_MBI_TESTS "Enable MBI test targets." OFF)
if(PARCOACH_ENABLE_MBI_TESTS)
  add_subdirectory(MBI)
endif()

if(PARCOACH_ENABLE_RMA)
  add_subdirectory(rma)
endif()
